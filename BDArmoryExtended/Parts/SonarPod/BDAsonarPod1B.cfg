PART
{
// Kerbal Space Program - Part Config
//
//

// --- general parameters ---
name = BDAsonarPod1B
module = Part
author = Spanner

// --- asset parameters ---
buoyancy = 0
MODEL
	{
		model = BDArmory/Parts/SonarPod/BDAsonarPod1A
		scale = 1.0, 1.0, 1.0
	}
	rescaleFactor = 2



// --- node definitions ---
node_attach = 0.0, -0.0, 0, 0, 0, -1


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 2200
cost = 1000
category = none
bdacategory = Radars
subcategory = 0
bulkheadProfiles = srf

title = #loc_BDArmory_part_BDAsonarPod1B_title //BDA Passive Sonar Pod
manufacturer = #loc_BDArmory_agent_title //Bahamuto Dynamics 
description = #loc_BDArmory_part_BDAsonarPod1B_desc //A Sonar Pod can only detect splashed and submerged vessels, mount below waterline for best results. As a passive sonar it can only detect, not track. 
tags = #loc_BDArmory_part_BDAsonarPod1A_tags 
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 0.5
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 3600

MODULE
{
  	name = ModuleRadar

	// -- Section: General Configuration --
	radarName = BDA MK2 Sonar Pod		// if left empty part.title is used, but advised to set this to a nice printable text
	rwrThreatType = -1				//passive sensor, no RWR type
	rotationTransformName = shaft//rotationTransform
	//turretID = 0					// if needed
	resourceDrain = 1.0				// change to higher values for more capable radars, e.g AESA

	// -- Section: Capabilities --
	omnidirectional = False				// false: boresight scan radar
	directionalFieldOfView = 270			// for omni and boresight
	//boresightFOV = 10				// for boresight only
	scanRotationSpeed = 45				// degress per second
	//lockRotationSpeed = 90				// only relevant if canLock
	//lockRotationAngle = 4
	showDirectionWhileScan = false			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
	//multiLockFOV = 90				// only relevant if canLock
	//lockAttemptFOV = 2				// only relevant if canLock
    	maxLocks = 0					//how many targets can be locked/tracked simultaneously. only relevant if canLock

	canScan = true					// scanning/detecting targets (volume search)
	canLock = false					// locking/tracking targets (fire control)
  	canTrackWhileScan = true			// continue scanning while tracking a locked target
  	canReceiveRadarData = true			// can work as passive data receiver

	radarGroundClutterFactor = 1.0	
	sonarType = 2 //Active Sonar; 0 = Radar; 2 = passive sonar

	radarDetectionCurve
	{
	  // floatcurve to define at what range (km) what acousticSignature can be detected.
	  // this defines both min/max range of the sonar, and sensitivity/efficiency
	  // it is recommended to define an "assured detection range", at which all craft are detected regardless
	  //     of their noiseSig. This is achieved by using a value of zero, thus detecting everything.
	  //    key = distance	acousticSig
            key = 0.0	0
		 key = 2	0
            key = 5	65  	
            key = 10	175
            key = 20	400	
            key = 40	900 //at 40km range an acousticSig of 900 can be detected
		//acousticSig is 1/10th engine thrust + 1/10th baseRCS * (vessel speed * (vesselspeed / 15))
	}

	radarLockTrackCurve
	{
		// same as detectionCurve, just for locking/tracking purpose
            key = 0.0	0
            key = 10	125    
            key = 20	250
            key = 40	500	
	}


}
}

